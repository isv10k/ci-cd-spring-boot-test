name: Deploy

on:
  push:
    branches:
      - main
      - master

jobs:
  run-unit-tests:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: aarch64
          overwrite-settings: false
      - name: Test of  Unit Test tmp
        run: ./mvnw --batch-mode --update-snapshots -X -DskipTests=true package
      - name: Rename the artifact
        run: cp target/ci-cd-test-0.0.1-SNAPSHOT.jar ci-cd-test.jar
      - name: Save the artifact
        uses: actions/upload-artifact@v3
        with:
          name: ci-cd-test
          path: ci-cd-test.jar

  deploy:
    runs-on: self-hosted
    needs: run-unit-tests
    steps:
      - name: Get the artifact
        uses: actions/download-artifact@v3
        with:
          name: ci-cd-test
      - name: Wait for SSH
        run: |
          while ! nc -w1 -z ${{ secrets.SSH_HOST }} 22; do
                  sleep 1
                  echo "SSH not available..."
          done; echo "SSH ready!"
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          cat >>~/.ssh/config << END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github-actions-key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: Stop App
        run: |
          ssh server /bin/bash << 'END' 
            pid=`ps aux | grep "ci-cd-test.jar" | grep -v grep | awk '{print $2}'`
            if [ "$pid" == "" ]; then
              echo "Process not found"
            else
              kill -TERM $pid || kill -KILL $pid
            fi
            if [ ! -d app ]; then
              mkdir app
            fi
          END
      - name: Deploy JAR
        run: |
          rsync -v ci-cd-test.jar server:~/app
      - name: Start App
        run: ssh server "nohup java -jar ~/app/ci-cd-test.jar > output.$(date --iso).log 2>&1 &"

